<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FqBo0gNcJAAAAABJRU5ErkJggg==
</value>
  </data>
</root>