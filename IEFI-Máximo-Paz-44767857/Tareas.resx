<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f4/EUxHY0YilAAAAAElFTkSuQmCC
</value>
  </data>
</root>